 

services:
  # Frontend Service - Interfaz web para el usuario
  frontend:
    build:
      context: ./nodejs-services/frontend
      dockerfile: Dockerfile
    container_name: tinkubot-frontend
    ports:
      - "${FRONTEND_SERVICE_PORT:-5000}:${FRONTEND_SERVICE_PORT:-5000}"
    environment:
      - FRONTEND_SERVICE_PORT=${FRONTEND_SERVICE_PORT}
      - WHATSAPP_CLIENTES_URL=${WHATSAPP_CLIENTES_URL}
      - WHATSAPP_PROVEEDORES_URL=${WHATSAPP_PROVEEDORES_URL}
      - NODE_ENV=production
    networks:
      - tinkubot-network
    restart: unless-stopped

  # WhatsApp Service - Bot Clientes (+593 99 882 3053)
  wa-clientes:
    build:
      context: ./nodejs-services/wa-clientes
      dockerfile: Dockerfile
    container_name: tinkubot-wa-clientes
    ports:
      - "${CLIENTES_WHATSAPP_PORT:-5001}:${CLIENTES_WHATSAPP_PORT:-5001}"
    environment:
      # ACTUALIZADO: Usa el AI Service Clientes específico para esta instancia
      - AI_SERVICE_CLIENTES_URL=${AI_SERVICE_CLIENTES_URL}
      - CLIENTES_AI_SERVICE_URL=${CLIENTES_AI_SERVICE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_BACKEND_API_KEY=${SUPABASE_BACKEND_API_KEY}
      - SUPABASE_BUCKET_NAME=${SUPABASE_BUCKET_NAME}
      - CLIENTES_WHATSAPP_PORT=${CLIENTES_WHATSAPP_PORT}
      - WHATSAPP_CLIENTES_PORT=${WHATSAPP_CLIENTES_PORT}
      - CLIENTES_INSTANCE_ID=${CLIENTES_INSTANCE_ID}
      - CLIENTES_INSTANCE_NAME=${CLIENTES_INSTANCE_NAME}
      - NODE_ENV=production
    networks:
      - tinkubot-network
    restart: unless-stopped

  # WhatsApp Service - Bot Proveedores (segundo número)
  wa-proveedores:
    build:
      context: ./nodejs-services/wa-proveedores
      dockerfile: Dockerfile
    container_name: tinkubot-wa-proveedores
    ports:
      - "${PROVEEDORES_WHATSAPP_PORT:-5002}:${PROVEEDORES_WHATSAPP_PORT:-5002}"
    environment:
      # ACTUALIZADO: Usa el AI Service Proveedores específico para esta instancia
      - PROVEEDORES_AI_SERVICE_URL=${PROVEEDORES_AI_SERVICE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_BACKEND_API_KEY=${SUPABASE_BACKEND_API_KEY}
      - SUPABASE_BUCKET_NAME=${SUPABASE_BUCKET_NAME}
      - PROVEEDORES_WHATSAPP_PORT=${PROVEEDORES_WHATSAPP_PORT}
      - WHATSAPP_PROVEEDORES_PORT=${WHATSAPP_PROVEEDORES_PORT}
      - PROVEEDORES_INSTANCE_ID=${PROVEEDORES_INSTANCE_ID}
      - PROVEEDORES_INSTANCE_NAME=${PROVEEDORES_INSTANCE_NAME}
      - NODE_ENV=production
    networks:
      - tinkubot-network
    restart: unless-stopped

  # AI Service Clientes - Procesamiento con sesiones integradas
  ai-clientes:
    build:
      context: ./python-services
      dockerfile: ai-clientes/Dockerfile
    container_name: tinkubot-ai-clientes
    ports:
      - "${CLIENTES_SERVER_PORT:-8001}:${CLIENTES_SERVER_PORT:-8001}"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=${REDIS_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_BACKEND_API_KEY=${SUPABASE_BACKEND_API_KEY}
      - CLIENTES_SERVER_PORT=${CLIENTES_SERVER_PORT}
      - AI_SERVICE_CLIENTES_PORT=${AI_SERVICE_CLIENTES_PORT}
      - SERVER_HOST=${SERVER_HOST}
      - NODE_ENV=production
    networks:
      - tinkubot-network
    restart: unless-stopped

  # AI Service Proveedores - Procesamiento con sesiones integradas
  ai-proveedores:
    build:
      context: ./python-services
      dockerfile: ai-proveedores/Dockerfile
    container_name: tinkubot-ai-proveedores
    ports:
      - "${PROVEEDORES_SERVER_PORT:-8002}:${PROVEEDORES_SERVER_PORT:-8002}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=${REDIS_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_BACKEND_API_KEY=${SUPABASE_BACKEND_API_KEY}
      - PROVEEDORES_SERVER_PORT=${PROVEEDORES_SERVER_PORT}
      - AI_SERVICE_PROVEEDORES_PORT=${AI_SERVICE_PROVEEDORES_PORT}
      - SERVER_HOST=${SERVER_HOST}
      - NODE_ENV=production
    networks:
      - tinkubot-network
    restart: unless-stopped

  # Search Token Service - Servicio de búsqueda con tokenización
  search-token:
    build:
      context: ./python-services
      dockerfile: search-token/Dockerfile
    container_name: tinkubot-search-token
    ports:
      - "${SEARCH_TOKEN_PORT:-8000}:${SEARCH_TOKEN_PORT:-8000}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_BACKEND_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_PORT=${SEARCH_TOKEN_PORT}
      - NODE_ENV=production
    networks:
      - tinkubot-network
    restart: unless-stopped

  

networks:
  tinkubot-network:
    driver: bridge
